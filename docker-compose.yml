---
# poc to compare fluentd and fluent-bit & their metrics
services:
  fluentd:
    build: ./fluentd
    container_name: fluentd
    ports:
      - "24224:24224"
      - "24231:24231"
    volumes:
      - ./fluentd:/fluentd/etc
    environment:
      - FLUENTD_CONF=fluentd.conf
    command: ["fluentd", "-c", "/fluentd/etc/fluentd-server.conf"]
  fluentd-client:
    build: ./fluentd
    container_name: fluentd-client
    ports:
      - "24225:24225"
      - "24232:24232"
    volumes:
      - ./fluentd:/fluentd/etc
    environment:
      - FLUENTD_CONF=fluentd-client.conf
    command: ["fluentd", "-c", "/fluentd/etc/fluentd-client.conf"]
  fluent-bit:
    image: fluent/fluent-bit:3.1.9
    container_name: fluent-bit
    ports:
      - "2020:2020"
      - "2021:2021"
      - "8888:8888"
    volumes:
      - ./fluent-bit:/fluent-bit/etc
    command: ["/fluent-bit/bin/fluent-bit", "-c", "/fluent-bit/etc/fluent-bit.yml"]
  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    # volumes:
    #   - ./grafana:/etc/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_USERS_AUTO_ASSIGN_ORG=true
      - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Editor
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_USER=true
      - GF_AUTH_ANONYMOUS_USER_ORG_ROLE=Viewer
      - GF_AUTH_ANONYMOUS_USER_ORG_NAME=Main Org.
    command: ["--config=/etc/grafana/grafana.ini"]
  opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:2.19.0 # Specifying the latest available image - modify if you want a specific version
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}    # Sets the demo admin user password when using demo configuration, required for OpenSearch 2.12 and later
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
  opensearch-node2:
    image: opensearchproject/opensearch:2.19.0 # This should be the same image used for opensearch-node1 to avoid issues
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.19.0 # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
      DATA_SOURCE_ENABLED: 'true' # Enable the data source
      OPENSEARCH_USERNAME: 'admin' # Set the username for OpenSearch
      OPENSEARCH_PASSWORD: '${OPENSEARCH_INITIAL_ADMIN_PASSWORD}' # Set the password for OpenSearch
      OPENSEARCH_SSL_VERIFICATIONMODE: 'none' # Disable SSL verification for OpenSearch connections
  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  filebeat:
    # image: docker.elastic.co/beats/filebeat:7.15.0
    image: docker.elastic.co/beats/filebeat:8.14.3
    container_name: filebeat
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./filebeat/test-file.log:/var/log/test-file.log
    command: ["-e", "-strict.perms=false"]
  logstash:
    image: docker.elastic.co/logstash/logstash-oss:8.14.1
    container_name: logstash
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "514:514"
    command: ["-f", "/usr/share/logstash/pipeline/logstash.conf", "--config.reload.automatic"]
  vector:
    image: timberio/vector:0.46.1-debian
    container_name: vector
    volumes:
      - ./vector/vector.yaml:/etc/vector/vector.yaml
    ports:
      - "8686:8686"
    environment:
      - VECTOR_LOG=debug
